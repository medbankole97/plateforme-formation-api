// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // Remplacez par votre base de données si nécessaire
  url      = env("DATABASE_URL")
}

model modules {
  id       Int      @id @default(autoincrement())
  name     String   @db.VarChar(50)
  duration DateTime
  price    Decimal  @db.Decimal(10, 2)
  status   Boolean

  registration registrations[]
  payment      payments[]
}

model students {
  id           Int      @id @default(autoincrement())
  fullName     String   @db.VarChar(50)
  phoneNumber  String   @db.VarChar(15)
  email        String   @db.VarChar(100)
  address      String   @db.VarChar(100)
  tutor        String   @db.VarChar(50)
  status       Boolean   @default(true)

  registration registrations[]
  payment      payments[]
}

model registrations {
  id           Int      @id @default(autoincrement())
  dateRegister DateTime
  startDate    DateTime
  endDate      DateTime
  amount       Decimal  @db.Decimal(10, 2)

  moduleId     Int
  studentId    Int

  module       modules   @relation(fields: [moduleId], references: [id])
  student      students  @relation(fields: [studentId], references: [id])

  payment     payments[]
}

model payments {
  id           Int      @id @default(autoincrement())
  paymentDate  DateTime
  amount       Decimal  @db.Decimal(10, 2)
  payer        String   @db.VarChar(50)
  payerNumber  String   @db.VarChar(15)
  paymentMode  String   @db.VarChar(50)

  registrationId Int
  studentId      Int
  moduleId       Int

  registration   registrations @relation(fields: [registrationId], references: [id])
  student        students      @relation(fields: [studentId], references: [id])
  module         modules       @relation(fields: [moduleId], references: [id])
}